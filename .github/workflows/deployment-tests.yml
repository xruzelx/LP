name: Create Deployment Tests Issue

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number'
        required: true
        type: string
      server_name:
        description: 'Server name'
        required: true
        type: choice
        options:
          - alpha
          - demo-prod
          - app
          - erasmusmc
          - uza
          - evone-demo
          - decin
          - kosice
          - cleveland
          - maltacare
          - homecare
          - pvi

jobs:
  create-issue:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    
    steps:
      - name: Close existing issue for this server
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const serverName = '${{ inputs.server_name }}';
            
            // Search for open issues with the server name in the title
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              per_page: 100
            });
            
            // Find issues that match the server name pattern
            const matchingIssues = issues.data.filter(issue => 
              issue.title.includes(serverName) && 
              issue.title.includes('Deployment')
            );
            
            // Close all matching issues
            for (const issue of matchingIssues) {
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                state: 'closed'
              });
              console.log(`Closed issue #${issue.number}: ${issue.title}`);
            }

      - name: Create new deployment issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const version = '${{ inputs.version }}';
            const serverName = '${{ inputs.server_name }}';
            
            const issueTitle = `Tests checklist for ${serverName} - v.${version}`;
            
            const issueBody = `## Deployment Checklist for ${serverName}
            
            **Version:** ${version}
            **Server:** ${serverName}
            **Created:** ${new Date().toISOString().split('T')[0]}

            _If some check fails: add **Bug** label and create issue in Jira_
            
            ### Vasya
            - [ ] Readings patients' pages open
            - [ ] Readings parameters load and each parameter has data
            - [ ] Readings parameters charts works, zoom works, 5-munute interval detection works
            - [ ] Readings waveforms charts works with aggregated data and detailed data
            - [ ] Amount of requests while zooming waveforms charts in Readings
            - [ ] Readings pvi chart works
            - [ ] Readings medication chart works
            - [ ] All Readings charts loading within reasonable limits
            - [ ] All Readings charts syncronized by timeline
            - [ ] Check logs for errors
            
            ### Kate
            - [ ] Analytics project page open
            - [ ] Analytics patient-select page open
            - [ ] Analytics patients' pages open
            - [ ] Analytics parameters load
            - [ ] Analytics parameters charts works, zoom works, 5-munute interval detection works
            - [ ] Analytics waveforms charts works
            - [ ] Amount of requests while zooming waveforms charts in Analytics
            - [ ] Analytics pvi chart works
            - [ ] Analytics Alarms history chart works
            - [ ] Analytics threshold settings works
            - [ ] Analytics set alarm settings settings works
            - [ ] All Analytics charts loading within reasonable limits
            - [ ] All Analytics charts syncronized by timeline
            - [ ] Check logs for errors
            
            ### Soib
            - [ ] Reports page works
            - [ ] Reports time filter works
            - [ ] Reports charts and statistic work
            - [ ] Patient management page works
            - [ ] Patient management page add/remove users/devices/patients functionality works
            - [ ] Patient management page add/remove/edit project functionality works
            - [ ] Patient management page all types project links work correctly
            - [ ] Check logs for errors
            
            ### Slava
            - [ ] Calculations works
            - [ ] Check containers logs on server for errors
            - [ ] Find similar functionality works
            - [ ] Simulator page open
            - [ ] Simulator charts and mp/cs parameters work
            - [ ] Simulator start/stop/pause/resume works
            - [ ] Simulator patient's/lungs/ventilator/effort settings work
            `;
            
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: issueTitle,
              body: issueBody,
              labels: [serverName]
            });
            
            console.log(`Created issue #${issue.data.number}: ${issue.data.title}`);
            console.log(`Issue URL: ${issue.data.html_url}`);
